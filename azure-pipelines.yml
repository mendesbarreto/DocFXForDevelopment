# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    - script: |
    sudo apt install mono-devel.
    sudo apt intall mono-complete
    sudo apt-get install unzip
    
    
  displayName: 'Run a multi-line install mono and unzip'

- script: |
    - script: |
    mkdir docfx
    wget "https://github.com/dotnet/docfx/releases/download/v2.43.1/docfx.zip" -P docfx
    cd docfx
    unzip docfx.zip
    cd ..
  displayName: 'Unzip DocFx'

- script: |
    - script: |
    ehco '$(github.connection)'
    mono docfx/docfx.exe build docfx_project/docfx.json
    cp -r docfx_project/_site/ ./docs
    git status
    git add .
    git commit -am "Update docs each build"
    git tag $(Build.SourceVersion)
    git push -u origin master
    git push --tags
    ls -la
    
  displayName: 'Run a multi-line install mono'

- task: GitHubRelease@1
  inputs:
    githubEndpoint: 'mendesbarreto'
    repositoryName: 'DocFXForDevelopment'
    tag: '$(Build.BuildNumber)'
    branch: 'master'
    releaseName: 'Release $(Build.SourceVersion)'
    usecommitmessage: true
    isdraft: false
    isprerelease: false